<div class="container">
  <div class="welcome">
    <h1>Comment va, <%= current_user.pseudo %> ?</h1>
  </div>
  <div class="dashboard-progression mb-5" >
    <div class="card card-octopus">
      <div class="card-octopus__image d-flex justify-content-center">
        <%= image_tag ("happy-octopus.png"), width: 250 %>
      </div>
      <div class="progression-content" >
        <div>
          <h3><%= @team.score %></h3>
        </div>
        <div class="d-flex flex-column justify-content-center" >
          <% if !@reward.nil? && @reward.selected == true %>
            <% if @team.score < @reward.goal %>
              <p >Il reste <strong ><%= @remaining_points %></strong> points à <strong><%= @team.name %></strong> pour remporter : <strong><%= @reward.name %></strong></p>
            <% end %>
          <% else %>
            <p>Séléctionne une récompense pour jouer !</p>
            <p><i class="fa-solid fa-trophy" style="color: black;"></i> <%= link_to "Les récompenses", team_rewards_path(@team), class: "link" %></p>
          <% end %>
        </div>
      </div>
    </div>
    <div class="cards-progression">
      <div class="card card-achieved-tasks">
        <h3><%= @tasks_completed %></h3>
        <p>Mes tâches réalisées</p>
      </div>
      <div class="card card-pending-tasks">
        <h3><%= @tasks_remaining %></h3>
        <p>Mes tâches en cours</p>
      </div>
    </div>
  </div>

  <div class="mb-5" data-controller="tasks">
    <h1 class="mb-3">Mes tâches à venir</h1>

    <%= simple_form_for :filter, url: tasks_path, method: :get, html: { data: { controller: "tasks" } } do |f| %>
    <div class="calendar mb-4">
      <% (Date.today - 2..Date.today + 2).each do |date| %>
        <div class="tag-item">
          <%= f.radio_button :date, date, id: "date_#{date}", class: "tag-selector visually-hidden", data: { action: "tasks#filterTasks", tasks_target: "date" }, checked: date == Date.today %>
          <%= f.label :date, for: "date_#{date}", class: "tag-date text-center" do %>
            <%= content_tag :span, date.strftime('%a'), class: "d-block text-center" %>
            <%= content_tag :span, date.strftime('%e'), class: "d-block text-center tag-day" %>
          <% end %>
        </div>
      <% end %>
    </div>

    <%= f.submit "Filter Tasks", class: "btn btn-primary", style: "display:none;" %>
    <% end %>

    <div id="tasks-list">
      <%= render partial: "tasks/tasks_list", locals: { tasks: @tasks }, layout: false %>
    </div>
  </div>

  <h1 class="mb-3">Mes listes</h1>

  <div id="carouselExampleControls" class="carousel slide mb-5" data-interval="false" data-bs-ride="carousel">
    <div class="carousel-inner">
      <div class="carousel-item active">
        <div class="card card-list">
          <h3>Idées cadeaux de noël enfants</h3>
          <span
            class="input"
            role="textbox"
            contenteditable>
              Commence à taper tes idées ici...
          </span>
        </div>
      </div>

      <div class="carousel-item">
        <div class="card card-list">
          <h3>Idées camping vacances été</h3>
          <span
            class="input"
            role="textbox"
            contenteditable>
              Commence à taper tes idées ici...
          </span>
        </div>
      </div>

      <div class="carousel-item">
        <div class="card card-list">
          <h3>Idées camping vacances été</h3>
          <span
            class="input"
            role="textbox"
            contenteditable>
              Commence à taper tes idées ici...
          </span>
        </div>
      </div>

    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
      <span class="prev-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
      <span class="next-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Next</span>
    </button>
  </div>


  <div class="progress-container">
    <div class="skill">
      <div class="outer">
        <div class="inner">
          <div id="number" data-score="<%= @team.score %>" data-goal="<%= @reward.goal %>">
            65%
          </div>
        </div>
      </div>
    </div>
    <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="160px" height="160px">
      <defs>
        <linearGradient id="GradientColor">
          <stop offset = "0%" stop-color = "#DA22FF"/>
          <stop offset = "100%" stop-color = "#9733EE"/>
        </linearGradient>
      </defs>
      <circle cx="80" cy="80" r="70" stroke-linecap="round"/>
    </svg>

    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const numberElement = document.getElementById('number');
        const score = parseInt(numberElement.getAttribute('data-score'));
        const goal = parseInt(numberElement.getAttribute('data-goal'));
        const circle = document.querySelector('circle');
        const radius = circle.r.baseVal.value;
        const circumference = 2 * Math.PI * radius;

        circle.style.strokeDasharray = `${circumference}`;

        const progress = (score / goal) * 100;
        const offset = circumference - (progress / 100) * circumference;

        // Set initial animation state
        circle.style.transition = 'stroke-dashoffset 1s ease-in-out';
        circle.style.strokeDashoffset = circumference; // Start from full dash

        // Start the animation
        setTimeout(() => {
          circle.style.strokeDashoffset = offset; // Animate to the desired percentage
        }, 100); // Adjust this delay to match your needs

        numberElement.textContent = `${Math.round(progress)}%`;
      });
    </script>
  </div>

</div>
